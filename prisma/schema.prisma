// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum State {
  NEW_HANOVER
  AMBARINO
  LEMOYNE
  WEST_ELIZABETH
  NEW_AUSTIN
}

enum AnimalType {
  DEFAULT
  BIRD
  FISH
}

// Animal model stores information about different animals
model Animal {
  id        String     @id @default(cuid())
  name      String     @unique @db.VarChar(255)
  type      AnimalType @default(DEFAULT)
  locations Location[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  comments  Comment[]
}

// Plant model stores details about various plants
model Plant {
  id        String     @id @default(cuid())
  name      String     @unique @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  location  Location[]
  comments  Comment[]
}

// LegendaryAnimal model for rare and unique animals
model LegendaryAnimal {
  id   String @id @default(cuid())
  name String @unique

  locationId String?   @unique
  location   Location? @relation(fields: [locationId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  comments   Comment[]
}

// Location model to store location details
model Location {
  id        String   @id @default(cuid())
  region    String
  name      String?  @unique
  state     State
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  locationDescriptions LocationDescription[]
  animal               Animal[]
  plant                Plant[]
  legendaryAnimal      LegendaryAnimal?
  comments             Comment[]
}

model LocationDescription {
  id        String    @id @default(cuid())
  text      String
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  locationId String
  location   Location @relation(fields: [locationId], references: [id])

  relatedEntities Json[]
}

// Comment model for user comments on animals, plants, and legendary animals
model Comment {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  location              Location[]
  animal                Animal[]
  plant                 Plant[]
  legendaryAnimalId     String?
  legendaryAnimal       LegendaryAnimal?     @relation(fields: [legendaryAnimalId], references: [id])
  locationDescriptionId String?
  locationDescription   LocationDescription? @relation(fields: [locationDescriptionId], references: [id])
}

// User model to store user information
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
